package com.jasper;

import javax.swing.JOptionPane;

/**
 *
 * @author Albert
 */
public class Phase extends OpticsPane {

    /**
     * Creates new form CylincalLens
     */
    public Phase() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelPattern = new EduPatternJPanel();
        labelPi = new javax.swing.JLabel();
        textPi = new javax.swing.JTextField();
        labelTheta = new javax.swing.JLabel();
        textTheta = new javax.swing.JTextField();
        buttonGenerate = new javax.swing.JButton();

        javax.swing.GroupLayout panelPatternLayout = new javax.swing.GroupLayout(panelPattern);
        panelPattern.setLayout(panelPatternLayout);
        panelPatternLayout.setHorizontalGroup(
            panelPatternLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 480, Short.MAX_VALUE)
        );
        panelPatternLayout.setVerticalGroup(
            panelPatternLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 270, Short.MAX_VALUE)
        );

        labelPi.setText("Phy");

        textPi.setText("0.0");
        textPi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textPiActionPerformed(evt);
            }
        });

        labelTheta.setText("Theta");

        textTheta.setText("0.0");
        textTheta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textThetaActionPerformed(evt);
            }
        });

        buttonGenerate.setText("Generate");
        buttonGenerate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonGenerateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(6, 6)
                        .addComponent(panelPattern, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelPi, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelTheta))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(textPi, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textTheta, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(buttonGenerate))))
                .addContainerGap(6, 6))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(6, 6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelPattern, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelPi, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textPi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelTheta)
                            .addComponent(textTheta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonGenerate))))
        );
    }// </editor-fold>//GEN-END:initComponents

    // Optical arguments, which will be parsed before reassigning the values
    private double phy=0.0, theta=0.0;
    private boolean parseArguments() {
    	boolean ret = false;
    	try {
        	double phy = Double.valueOf(textPi.getText());
        	double theta = Double.valueOf(textTheta.getText());	    	
	    	ret = true;	    	
	    	this.phy=phy;
	    	this.theta=theta;
    	}
    	catch (Exception e) {
    		JOptionPane.showMessageDialog(null, warnings);
    		textPi.setText(String.valueOf(this.phy));
    		textTheta.setText(String.valueOf(this.theta));
    	}
    	return ret;
    }
    
    private String genLog() {
		return String.format(logmessage, Double.toString(phy), Double.toString(theta));    	
    }
    
    private void buttonGenerateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonGenerateActionPerformed
    	if (parseArguments()){
			PatternImage image = ((EduPatternJPanel)panelPattern).pimage; 
			image.updateMirrorParameter(phy, theta);
			image.paintMirror();
			EduPatternTest.updateMirrorPattern(image, genLog());
			imageGenerated = true;
    	}
    }//GEN-LAST:event_buttonGenerateActionPerformed

    private void textPiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textXposActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textXposActionPerformed

    private void textThetaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textRotationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textRotationActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonGenerate;
    private javax.swing.JLabel labelPi;
    private javax.swing.JLabel labelTheta;
    private javax.swing.JPanel panelPattern;
    private javax.swing.JTextField textPi;
    private javax.swing.JTextField textTheta;
    // End of variables declaration//GEN-END:variables

    @Override
	void updatePatternScreen() {
    	PatternImage image = ((EduPatternJPanel)panelPattern).pimage; 
		if (!imageGenerated) {
	    	image.updateMirrorParameter(phy, theta);
	    	image.paintMirror();
	    	imageGenerated = true;
		}
    	EduPatternTest.updatePatternScreen(image, genLog());		
	}

    void updateRegenerate() {
    	PatternImage image = ((EduPatternJPanel)panelPattern).pimage; 
		if (imageGenerated) {
	    	image.updateMirrorParameter(phy, theta);
	    	image.paintMirror();
		}
    }

    static String logmessage="pattern mirror phy=%s theta=%s";
}
